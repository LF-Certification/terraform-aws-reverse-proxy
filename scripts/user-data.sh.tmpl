#!/usr/bin/env bash

set -xeuf -o pipefail

hostnamectl set-hostname reverse-proxy-${partner_resid}

### SSL Nginx config
SSM_SSL_PATH="${ssm_ssl_path}"
SSL_FILES="bundle.pem server.crt private.key"

for SSL_FILE in $SSL_FILES; do
  LOCAL_FILE="/etc/ssl/$SSL_FILE"
  # Make multiple attempts to get each file from SSM
  for i in {1..5}; do
    aws ssm get-parameters --region us-west-2 --names $SSM_SSL_PATH/$SSL_FILE --with-decryption | jq -r '.Parameters[0].Value' > $LOCAL_FILE
    if [ -s $LOCAL_FILE ]; then
      chmod 0600 $LOCAL_FILE
      break
    else
      sleep 20
    fi
  done
done

SITES="certerminal guacamole"

for SITE in $SITES; do
  sed -i "s/___HOSTNAME___/${hostname}/g" /etc/nginx/sites-available/$SITE
  sed -i "s/___TARGET_IP___/${target_ip}/g" /etc/nginx/sites-available/$SITE
done

# Configuring Certerminal
ln -s /etc/nginx/sites-available/certerminal /etc/nginx/sites-enabled/proxy
systemctl start nginx

# Desktop config
DESKTOP_ENABLED="${desktop_enabled}"

if [[ "$DESKTOP_ENABLED" == "true" ]]; then
  systemctl start guacd
  systemctl start tomcat9

  # Guacamole nginx config
  rm /etc/nginx/sites-enabled/proxy
  ln -s /etc/nginx/sites-available/guacamole /etc/nginx/sites-enabled/proxy
  systemctl reload nginx

  # The guacamole config for VNC stores the VNC hostname as "vnc_server"
  # So, we update the entry in hosts file at runtime
  sed -i "s/___TARGET_IP___/${target_ip}/g" /etc/hosts
fi

# Datadog

if [[ "${datadog_enabled}" == "true" ]]; then
  sed -i "s/___ENVIRONMENT___/${environment}/g" /etc/datadog-agent/datadog.yaml
  sed -i "s/___PARTNER_RESID___/${partner_resid}/g" /etc/datadog-agent/datadog.yaml

  systemctl start datadog-agent
fi
